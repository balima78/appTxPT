gls
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "red")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(name = "",labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab = ""
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "red")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(name = "",labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("")
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
ggplotly(gls)
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "red")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(name = "",labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("")
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "red")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("")
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
ggplotly(gls)
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "red")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
ggplotly(gls)
plotly_build(gls)
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "cPRA")) +
geom_line(aes(ordem,pTiso, color = "green")) +
geom_line(aes(ordem,pTcomp, color = "blue")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
plotly_build(gls)
gls<-ggplot(cpras) +
geom_line(aes(x=ordem,y=cPRA, label = ab0, color = "cPRA")) +
geom_line(aes(ordem,pTiso, color = "%T (compatível)")) +
geom_line(aes(ordem,pTcomp, color = "%T (isogrupal)")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
plotly_build(gls)
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
plotly_build(gls + theme_minimal())
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, color = "%T (compatível)")) +
geom_line(aes(ln,pT.compativel, color = "%T (isogrupal)")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
ggplotly(gls)
cpras$names<-c("ln","cPRA","AB0","pT.isogrupal","pT.compativel")
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, color = "%T (compatível)")) +
geom_line(aes(ln,pT.compativel, color = "%T (isogrupal)")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
gls
names(cpras)<-c("ln","cPRA","AB0","pT.isogrupal","pT.compativel")
cpras$cPRA<-round(cpras$cPRA)
cpras$pT.isogrupal<-round(cpras$pT.isogrupal)
cpras$pT.compativel<-round(cpras$pT.compativel)
###### código a passar para a app####
cpras<-read.csv2("cpras.csv")
names(cpras)<-c("ln","cPRA","AB0","pT.isogrupal","pT.compativel")
cpras$cPRA<-round(cpras$cPRA,2)
cpras$pT.isogrupal<-round(cpras$pT.isogrupal,2)
cpras$pT.compativel<-round(cpras$pT.compativel,2)
###### código a passar para a app####
cpras<-read.csv2("cpras.csv")
names(cpras)<-c("X","ln","cPRA","AB0","pT.isogrupal","pT.compativel")
cpras$cPRA<-round(cpras$cPRA,2)
cpras$pT.isogrupal<-round(cpras$pT.isogrupal,2)
cpras$pT.compativel<-round(cpras$pT.compativel,2)
###### código a passar para a app####
cpras<-read.csv2("cpras.csv")
names(cpras)<-c("X","ln","cPRA","AB0","pT.isogrupal","pT.compativel")
cpras$cPRA<-round(cpras$cPRA,2)
cpras$pT.isogrupal<-round(cpras$pT.isogrupal,2)
cpras$pT.compativel<-round(cpras$pT.compativel,2)
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, color = "%T (compatível)")) +
geom_line(aes(ln,pT.compativel, color = "%T (isogrupal)")) +
scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
plotly_build(gls + theme_minimal())
ggplotly(gls)
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, color = "%T (compatível)")) +
#  scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
plotly_build(gls + theme_minimal())
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
#  scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("") + xlab("")
plotly_build(gls + theme_minimal())
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
#  scale_color_discrete(labels = c("cPRA", "%T (isogrupal)", "%T (compatível)")) +
ylab("valor percentual (%)") + xlab("")
gls
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(names ="") +
ylab("valor percentual (%)") + xlab("")
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("")
gls
plotly_build(gls + theme_minimal())
runApp()
plotly_build(gls + theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()
))
runApp()
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("") +
title("Relação entre os valores de cPRA e de Transplantabilidade (%T)")
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("") +
tittle("Relação entre os valores de cPRA e de Transplantabilidade (%T)")
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("") +
labs(title("Relação entre os valores de cPRA e de Transplantabilidade (%T)"))
gls
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("") +
ggtitle("Relação entre os valores de cPRA e de Transplantabilidade (%T)")
gls
plotly_build(gls + theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
runApp()
runApp()
runApp()
runApp()
0.42287^2
0.650657^2
0.056754^2
0.292588^2+2*0.292588*0.650657
runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
y
runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
0.292588^2+2*0.292588*0.650657
pa<-0.292588
pb<-0.056754
po<-0.650657
pa^2+2*pa*po
pb^2+2*pb*po
2*pa*pb
po^2
runApp()
runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
cpras<-read.csv2("cpras.csv")
names(cpras)<-c("X","ln","cPRA","AB0","pT.isogrupal","pT.compativel")
cpras$cPRA<-round(cpras$cPRA,2)
cpras$pT.isogrupal<-round(cpras$pT.isogrupal,2)
cpras$pT.compativel<-round(cpras$pT.compativel,2)
pa<-0.292588
pb<-0.056754
po<-0.650657
ggs<-ggplot(cpras)
ggs + geom_line(aes(ln,cPRA,))
library(ggplot2)
library(plotly)
library(dplyr)
library(tidyr)
ggs<-ggplot(cpras)
ggs + geom_line(aes(ln,cPRA,))
ggs
ggs + geom_line(aes(ln,cPRA,))
ggs + geom_line(aes(ln,cPRA))
ggs + geom_line(aes(ln,cPRA), color = "red")
ggs + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,pT.isogrupal))
ggs + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,I(cPRA * 0.5 )))
ggs + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,I((1-cPRA) * 0.650657^2 )))
ggs + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,I((1-cPRA/100) * 0.650657^2 )))
ggs<-ggplot(cpras)
ggs + geom_line(aes(ln,I(cPRA/100)), color = "red")
geom_line(aes(ln,I(1-cPRA/100)*0.650657^2)
)
ggs  + geom_line(aes(ln,I(cPRA/100)), color = "red") +
geom_line(aes(ln,I(1-cPRA/100)*0.650657^2))
ggs  + geom_line(aes(ln,I(cPRA)), color = "red") +
geom_line(aes(ln,I((1-cPRA)*0.650657^2))*100)
ggs  + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,I((1-cPRA)*0.650657^2)*100))
ggs  + geom_line(aes(ln,cPRA), color = "red") +
geom_line(aes(ln,I((1-cPRA/100)*0.650657^2)*100))
ggs<-ggplot(cpras)
ggs <- ggs  + geom_line(aes(ln,cPRA), color = "red", size = 1.2)
## 0 ##
gss + geom_line(aes(ln,I((1-cPRA/100)*0.650657^2)*100))
## 0 ##
ggs + geom_line(aes(ln,I((1-cPRA/100)*0.650657^2)*100))
## AB
ggs + geom_line(aes(ln,I((1-cPRA/100))*100))
ggs + geom_line(aes(ln,I((1-cPRA/100))*100)) +
geom_line(aes(ln,I((1-cPRA/100)*(2*pa*pb))*100))
ggs + geom_line(aes(ln,I((1-cPRA/100))*100)) +
geom_line(aes(ln,I((1-cPRA/100)*(2*pa*pb)*100)))
ggs + geom_line(aes(ln,I((1-cPRA/100))*100)) +
geom_line(aes(ln,I(((1-cPRA/100)*(2*pa*pb))*100)))
ggs + geom_line(aes(ln,I((1-cPRA/100))*100)) +
geom_line(aes(ln,I((1-cPRA/100)*(2*pa*pb)*100)))
ggs + geom_line(aes(ln,I((1-cPRA/100))*100))
ggs + geom_line(aes(ln,(1-cPRA/100)*100))
## AB
ggs + geom_line(aes(ln,(1-cPRA/100)*100)) +
geom_line(aes(ln,(1-cPRA/100)*(2*pa*pb)*100))
ggs + geom_line(aes(ln,(1-cPRA/100)*100), color = "green")
## AB
ggs + geom_line(aes(ln,(1-cPRA/100)*100), color = "green") +
geom_line(aes(ln,(1-cPRA/100)*(2*pa*pb)*100))
gg + geom_line(aes(ln,(1-cPRA/100)*(pa+po)^2)*100, color = "green")
ggs + geom_line(aes(ln,(1-cPRA/100)*(pa+po)^2)*100, color = "green")
ggs + geom_line(aes(ln,(1-cPRA/100)*((pa+po)^2)*100), color = "green")
## A ##
ggs + geom_line(aes(ln,(1-cPRA/100)*((pa+po)^2)*100), color = "green") +
geom_line(aes(ln,(1-cPRA/100)*(pa^2+2*pa*po)*100))
ggs + geom_line(aes(ln,(1-cPRA/100)*((pa+po)^2)*100), color = "green", size = 1.2) +
geom_line(aes(ln,(1-cPRA/100)*(pa^2+2*pa*po)*100))
ggs + geom_line(aes(ln,(1-cPRA/100)*((pb+po)^2)*100), color = "green", size = 1.2) +
geom_line(aes(ln,(1-cPRA/100)*(pb^2+2*pb*po)*100))
ggs <- ggs  + geom_line(aes(ln,cPRA), color = "red", size = 1.2) +
ylab("valor percentual (%)")
## 0 ##
ggs + geom_line(aes(ln,I((1-cPRA/100)*po7^2)*100))
## 0 ##
ggs + geom_line(aes(ln,I((1-cPRA/100)*po^2)*100))
ggs <- ggs  + geom_line(aes(ln,cPRAcolor = "cPRA"), size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs <- ggs  + geom_line(aes(ln,cPRA, color = "cPRA"), size = 1.2) +
ylab("valor percentual (%)") + xlab("")
## 0 ##
ggs + geom_line(aes(ln,I((1-cPRA/100)*po^2)*100))
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA, color = "cPRA"), size = 1.2) +
ylab("valor percentual (%)") + xlab("")
## 0 ##
ggs + geom_line(aes(ln,(1-cPRA/100)*po^2*100))
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA, color = "cPRA"), size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA, color = "cPRA", size = 1.2) )+
ylab("valor percentual (%)") + xlab("")
ggs
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA), color = "cPRA", size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs
ggs<-ggplot(cpras)
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA), color = "cPRA", size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA), color = "red", size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs
ggs<-ggplot(cpras)
ggs <- ggs  + geom_line(aes(x=ln, y=cPRA), color = "red", size = 1.2) +
ylab("valor percentual (%)") + xlab("")
ggs
gls<-ggplot(cpras) +
geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
geom_line(aes(ln,pT.isogrupal, label = AB0, color = "%T (isogrupal)")) +
geom_line(aes(ln,pT.compativel, label = AB0, color = "%T (compatível)")) +
scale_color_discrete(name ="") +
ylab("valor percentual (%)") + xlab("") +
ggtitle("Relação entre os valores de cPRA e de Transplantabilidade (%T)")
gls +
theme_minimal() + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank())
ggs <- ggs  + geom_line(aes(x=ln,y=cPRA, label = AB0, color = "cPRA")) +
ylab("valor percentual (%)") + xlab("")
ggs
ggs <- ggs  + geom_line(aes(x=ln,y=cPRA, color = "cPRA")) +
ylab("valor percentual (%)") + xlab("")
ggs
## 0 ##
ggs + geom_line(aes(x=ln,y=(1-cPRA/100)*po^2*100, color = "%T"))
ggs + geom_line(aes(ln,(1-cPRA/100)*100, color = "%T compatível", size = 1.2)) +
geom_line(aes(ln,(1-cPRA/100)*(2*pa*pb)*100, color = "%T isogrupal"))
ggs + geom_line(aes(ln,(1-cPRA/100)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(2*pa*pb)*100, color = "%T isogrupal"))
ggs + geom_line(aes(ln,(1-cPRA/100)*((pa+po)^2)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(pa^2+2*pa*po)*100, color = "%T isogrupal"))
ggs + geom_line(aes(ln,(1-cPRA/100)*((pb+po)^2)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(pb^2+2*pb*po)*100, color = "%T isogrupal"))
ggs<-ggplot(cpras)
ggs <- ggs  + geom_line(aes(x=ln,y=cPRA, color = "cPRA")) +
ylab("valor percentual (%)") + xlab("")
## 0 ##
g0<- ggs + geom_line(aes(x=ln,y=(1-cPRA/100)*po^2*100, color = "%T"))
## AB
gAB<-ggs + geom_line(aes(ln,(1-cPRA/100)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(2*pa*pb)*100, color = "%T isogrupal"))
## A ##
gA<-ggs + geom_line(aes(ln,(1-cPRA/100)*((pa+po)^2)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(pa^2+2*pa*po)*100, color = "%T isogrupal"))
## B ##
gB<-ggs + geom_line(aes(ln,(1-cPRA/100)*((pb+po)^2)*100, color = "%T compatível")) +
geom_line(aes(ln,(1-cPRA/100)*(pb^2+2*pb*po)*100, color = "%T isogrupal"))
library(plotly)
plotly_build(g0 +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
## 0 ##
g0<- ggs + geom_line(aes(x=ln,y=I((1-cPRA/100)*po^2*100), color = "%T"))
plotly_build(g0 +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gA +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gA + ggtitle(paste("relação cPRA",pa)) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
gAB0<-list(A=NULL,B=NULL,AB=NULL,O=NULL)
gAB0
gAB0<-list(A=gA,B=gB,AB=gAB,O=g0)
plotly_build(gAB0[[1]] + ggtitle(paste("relação cPRA",pa)) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gAB0[[O]] + ggtitle(paste("relação cPRA",pa)) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gAB0[["O"]] + ggtitle(paste("relação cPRA",pa)) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
names(gAB0)
plotly_build(gAB0[[1]] + ggtitle(paste("relação cPRA",names(gAB0)[1])) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gAB0[[1]] + ggtitle(paste("relação entre cPRA e %T para grupo",names(gAB0)[1])) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
plotly_build(gAB0[[2]] +
ggtitle(paste("relação entre cPRA e %T para grupo",names(gAB0)[2])) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
gAB<-ggs + geom_line(aes(ln,round((1-cPRA/100)*100,2), color = "%T compatível")) +
geom_line(aes(ln,round((1-cPRA/100)*(2*pa*pb)*100,2), color = "%T isogrupal"))
gAB<-ggs + geom_line(aes(ln,round((1-cPRA/100)*100,2), color = "%T compatível")) +
geom_line(aes(ln,round((1-cPRA/100)*(2*pa*pb)*100,2), color = "%T isogrupal"))
gAB0<-list(A=gA,B=gB,AB=gAB,O=g0)
plotly_build(gAB0[[3]] +
ggtitle(paste("relação entre cPRA e %T para grupo",names(gAB0)[3])) +
theme_minimal() +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
legend.title = element_blank()))
shiny::runApp()
runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='bioestatisticas',
token='7ABE1E14AF786A7227F6F95837E44861',
secret='4DGi2kzm/a5i6ww9XiruPwzkNk0FVjTWNaPfV2Jm')
library(rsconnect)
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
library(rsconnect)
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
library(rsconnect)
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
rsconnect::setAccountInfo(name='bioestatisticas',
token='7ABE1E14AF786A7227F6F95837E44861',
secret='4DGi2kzm/a5i6ww9XiruPwzkNk0FVjTWNaPfV2Jm')
library(rsconnect)
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
install.packages('rsconnect')
library(rsconnect)
rsconnect::setAccountInfo(name='bioestatisticas',
token='7ABE1E14AF786A7227F6F95837E44861',
secret='4DGi2kzm/a5i6ww9XiruPwzkNk0FVjTWNaPfV2Jm')
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
install.packages("DT")
install.packages("shiny")
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
install.packages("shinydashboard")
install.packages("shinythemes")
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
rsconnect::setAccountInfo(name='bioestatisticas',
token='7ABE1E14AF786A7227F6F95837E44861',
secret='4DGi2kzm/a5i6ww9XiruPwzkNk0FVjTWNaPfV2Jm')
rsconnect::deployApp("D:/CHN/OpenData/appTxPT")
